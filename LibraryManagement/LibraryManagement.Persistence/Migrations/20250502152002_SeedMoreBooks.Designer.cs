// <auto-generated />
using System;
using LibraryManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Persistence.Migrations
{
    [DbContext(typeof(LibraryManagementDbContext))]
    [Migration("20250502152002_SeedMoreBooks")]
    partial class SeedMoreBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Harper Lee",
                            CategoryId = 1,
                            Description = "A classic novel set in the American South, dealing with racial injustice and moral growth through the eyes of young Scout Finch.",
                            ISBN = "9780061120084",
                            PublicationYear = 1960,
                            Quantity = 10,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 2,
                            Author = "George Orwell",
                            CategoryId = 1,
                            Description = "A dystopian masterpiece exploring totalitarianism, surveillance, and the manipulation of truth in a futuristic society.",
                            ISBN = "9780451524935",
                            PublicationYear = 1949,
                            Quantity = 10,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Stephen Hawking",
                            CategoryId = 2,
                            Description = "A groundbreaking exploration of cosmology, black holes, and the origins of the universe for general readers.",
                            ISBN = "9780553109535",
                            PublicationYear = 1988,
                            Quantity = 10,
                            Title = "A Brief History of Time"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Richard Dawkins",
                            CategoryId = 2,
                            Description = "Introduces the concept of genes as the primary drivers of evolution, shaping behavior and survival strategies.",
                            ISBN = "9780192860927",
                            PublicationYear = 1976,
                            Quantity = 10,
                            Title = "The Selfish Gene"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Jared Diamond",
                            CategoryId = 3,
                            Description = "Examines geographic and environmental factors that shaped the dominance of certain civilizations throughout history.",
                            ISBN = "9780393317558",
                            PublicationYear = 1997,
                            Quantity = 10,
                            Title = "Guns, Germs, and Steel"
                        },
                        new
                        {
                            Id = 6,
                            Author = "David McCullough",
                            CategoryId = 3,
                            Description = "A detailed biography of Orville and Wilbur Wright, chronicling their journey to inventing the first successful airplane.",
                            ISBN = "9781476728742",
                            PublicationYear = 2015,
                            Quantity = 10,
                            Title = "The Wright Brothers"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Anne Frank",
                            CategoryId = 4,
                            Description = "The poignant and powerful diary of a Jewish girl hiding from the Nazis during World War II.",
                            ISBN = "9780553296983",
                            PublicationYear = 1947,
                            Quantity = 10,
                            Title = "The Diary of a Young Girl"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Walter Isaacson",
                            CategoryId = 4,
                            Description = "The authorized biography of Apple's visionary co-founder, revealing his genius, creativity, and complex personality.",
                            ISBN = "9781451648539",
                            PublicationYear = 2011,
                            Quantity = 10,
                            Title = "Steve Jobs"
                        },
                        new
                        {
                            Id = 9,
                            Author = "E.B. White",
                            CategoryId = 5,
                            Description = "A heartwarming tale of friendship between a pig named Wilbur and a clever spider named Charlotte.",
                            ISBN = "9780061124952",
                            PublicationYear = 1952,
                            Quantity = 10,
                            Title = "Charlotte's Web"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Dr. Seuss",
                            CategoryId = 5,
                            Description = "A whimsical and rhyming story about a mischievous cat who turns a rainy day into an unforgettable adventure.",
                            ISBN = "9780394800011",
                            PublicationYear = 1957,
                            Quantity = 10,
                            Title = "The Cat in the Hat"
                        },
                        new
                        {
                            Id = 11,
                            Author = "F. Scott Fitzgerald",
                            CategoryId = 1,
                            Description = "A portrait of the Jazz Age through the tragic story of the mysterious millionaire Jay Gatsby and his love for Daisy Buchanan.",
                            ISBN = "9780743273565",
                            PublicationYear = 1925,
                            Quantity = 8,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Frank Herbert",
                            CategoryId = 1,
                            Description = "A science fiction epic about politics, religion, and power on the desert planet Arrakis, home to the valuable spice melange.",
                            ISBN = "9780441172719",
                            PublicationYear = 1965,
                            Quantity = 7,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Carl Sagan",
                            CategoryId = 2,
                            Description = "A journey through the universe exploring astronomy, biology, and the history of science, connecting humanity to the cosmos.",
                            ISBN = "9780345539434",
                            PublicationYear = 1980,
                            Quantity = 6,
                            Title = "Cosmos"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Siddhartha Mukherjee",
                            CategoryId = 2,
                            Description = "A comprehensive history of genetics, from its discovery to modern breakthroughs and ethical dilemmas.",
                            ISBN = "9781476733500",
                            PublicationYear = 2016,
                            Quantity = 5,
                            Title = "The Gene: An Intimate History"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Yuval Noah Harari",
                            CategoryId = 3,
                            Description = "Explores the history of Homo sapiens from the Stone Age to the 21st century, examining key revolutions in human development.",
                            ISBN = "9780062316097",
                            PublicationYear = 2011,
                            Quantity = 9,
                            Title = "Sapiens: A Brief History of Humankind"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Peter Frankopan",
                            CategoryId = 3,
                            Description = "Reinterprets world history with Asia and the Silk Road trade routes at the center of global exchange and power.",
                            ISBN = "9781408839997",
                            PublicationYear = 2015,
                            Quantity = 4,
                            Title = "The Silk Roads: A New History of the World"
                        },
                        new
                        {
                            Id = 17,
                            Author = "Michelle Obama",
                            CategoryId = 4,
                            Description = "An intimate memoir by the former First Lady, chronicering her journey from Chicago's South Side to the White House.",
                            ISBN = "9781524763138",
                            PublicationYear = 2018,
                            Quantity = 7,
                            Title = "Becoming"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Tara Westover",
                            CategoryId = 4,
                            Description = "A memoir about a woman who leaves her survivalist family and goes on to earn a PhD from Cambridge University.",
                            ISBN = "9780399590504",
                            PublicationYear = 2018,
                            Quantity = 6,
                            Title = "Educated"
                        },
                        new
                        {
                            Id = 19,
                            Author = "J.K. Rowling",
                            CategoryId = 5,
                            Description = "The first book in the Harry Potter series, following a young boy's discovery of his magical heritage at Hogwarts School.",
                            ISBN = "9780590353427",
                            PublicationYear = 1997,
                            Quantity = 10,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Maurice Sendak",
                            CategoryId = 5,
                            Description = "A classic picture book about Max's imaginative journey to the land of the Wild Things, where he becomes king.",
                            ISBN = "9780060254926",
                            PublicationYear = 1963,
                            Quantity = 8,
                            Title = "Where the Wild Things Are"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("RequestorId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("RequestorId");

                    b.ToTable("BookBorrowingRequests");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequestDetails", b =>
                {
                    b.Property<int>("BookBorrowingRequestId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("BookBorrowingRequestId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BookBorrowingRequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Children"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequest", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LibraryManagement.Domain.Entities.User", "Requestor")
                        .WithMany("BookBorrowingRequests")
                        .HasForeignKey("RequestorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Requestor");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequestDetails", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.BookBorrowingRequest", "BookBorrowingRequest")
                        .WithMany("BookBorrowingRequestDetails")
                        .HasForeignKey("BookBorrowingRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Domain.Entities.Book", "Book")
                        .WithMany("BookBorrowingRequestDetails")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("BookBorrowingRequest");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.Navigation("BookBorrowingRequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequest", b =>
                {
                    b.Navigation("BookBorrowingRequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("BookBorrowingRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
